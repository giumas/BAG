environment:

  matrix:

    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2015
      VS_VERSION: Visual Studio 14
      platform: x64
      VS: 2015
      PYTHON_VERSION: 3.6
      PYTHON_ARCH: x64
      MINICONDA: C:\Miniconda36-x64

    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
      VS_VERSION: Visual Studio 15
      platform: x64
      VS: 2017
      PYTHON_VERSION: 3.7
      PYTHON_ARCH: x64
      MINICONDA: C:\Miniconda36-x64

matrix:

  allow_failures:

    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
      VS_VERSION: Visual Studio 15
      platform: x64
      PYTHON_VERSION: 3.7
      PYTHON_ARCH: x64
      MINICONDA: C:\Miniconda36-x64

install:
  - set PATH=%MINICONDA%;%MINICONDA%\Scripts;%PATH%

  # Install the build and runtime dependencies of the project.
  - conda config --set always_yes yes --set changeps1 no
  - conda update -q conda
  - conda info -a
  - conda config --add channels conda-forge
  - conda create -q -n test-environment python=%PYTHON_VERSION%
  - activate test-environment
  - conda install cmake hdf5 libxml2
  - conda list --show-channel-urls
  # Check that we have the expected version of Python
  - python --version
  - if %VS%==2015 call "C:\Program Files\Microsoft SDKs\Windows\v7.1\Bin\SetEnv.cmd" /x64
  - if %VS%==2015 call "C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\vcvarsall.bat" x86_amd64;
  - if %VS%==2017 call "C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\VC\Auxiliary\Build\vcvars64.bat";

build: off
build_script:
  - cd
  - cd extlibs
  - tar -xzf beecrypt-4.1.2.tar.gz
  - rename beecrypt-4.1.2 beecrypt
  - cd beecrypt
  - nmake -f Makefile_bag X64=TRUE DEBUG=FALSE
  - cd ..
  - cd ..
  - mkdir -p build
  - cd build
  - cmake ..
  - make
  
deploy: off
